version: '3.1'

services:
  gateway:
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    command: npm run start:dev gateway
    env_file:
      - ./apps/gateway/.env
    ports:
      - '3000:3000'
    volumes:
      - ./apps/gateway:/usr/src/apps
      - /usr/src/app/node_modules
  user:
    build:
      context: .
      dockerfile: ./apps/user/Dockerfile
      target: development
    command: npm run start:dev user
    depends_on:
      mongo_user:
        condition: service_healthy
    env_file:
      - ./apps/user/.env
    ports:
      - '3001:3000'
    volumes:
      - ./apps/user:/usr/src/apps
      - /usr/src/app/node_modules

  mongo_user:
    image: mongo:8
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
    ports:
      - '6003:27017'
    volumes:
      - ./mongo/user:/data/lib
    command: mongod --quiet --logpath /dev/null
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  event:
    build:
      context: .
      dockerfile: ./apps/event/Dockerfile
      target: development
    command: npm run start:dev event
    depends_on:
      mongo_event:
        condition: service_healthy
    env_file:
      - ./apps/event/.env
    ports:
      - '3002:3000'
    volumes:
      - ./apps/event:/usr/src/apps
      - /usr/src/app/node_modules

  mongo_event:
    image: mongo:8
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
    ports:
      - '6004:27017'
    volumes:
      - ./mongo/event:/data/lib
    command: mongod --quiet --logpath /dev/null
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s